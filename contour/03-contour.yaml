apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: contour
  name: contour
  namespace: heptio-contour
spec:
  replicas: 2
  selector:
    matchLabels:
      app: contour
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
      labels:
        app: contour
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: contour
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - serve
        - --incluster
        - --xds-address=0.0.0.0
        - --xds-port=8001
        - --envoy-service-http-port=80
        - --envoy-service-https-port=443
        - --contour-cafile=/ca/cacert.pem
        - --contour-cert-file=/certs/tls.crt
        - --contour-key-file=/certs/tls.key
        command: ["contour"]
        image: gcr.io/heptio-images/contour:v0.14.1
        imagePullPolicy:  IfNotPresent
        name: contour
        ports:
        - containerPort: 8001
          name: xds
          protocol: TCP
        - containerPort: 8000
          name: debug
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8000
        volumeMounts:
          - name: contourcert
            mountPath: "/certs"
            readOnly: true
          - name: cacert
            mountPath: "/ca"
            readOnly: true
      dnsPolicy: ClusterFirst
      serviceAccountName: contour
      volumes:
        - name: contourcert
          secret:
            secretName: contourcert
        - name: cacert
          secret:
            secretName:   cacert

